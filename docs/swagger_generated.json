{"basePath": "http://localhost:5000/", "consumes": ["application/json"], "definitions": {"Assign User model": {"properties": {"user_id": {"description": "The unique identifier of a user", "type": "integer"}}, "required": ["user_id"], "type": "object"}, "Change password request data model": {"properties": {"current_password": {"description": "User's current password", "type": "string"}, "new_password": {"description": "User's new password", "type": "string"}}, "required": ["current_password", "new_password"], "type": "object"}, "List mentorship relation request model": {"properties": {"accept_date": {"description": "Mentorship relation acceptance date in UNIX timestamp format", "type": "number"}, "action_user_id": {"description": "Mentorship relation requester user ID", "type": "integer"}, "creation_date": {"description": "Mentorship relation creation date in UNIX timestamp format", "type": "number"}, "end_date": {"description": "Mentorship relation end date in UNIX timestamp format", "type": "number"}, "id": {"description": "Mentorship relation ID", "type": "integer"}, "mentee_id": {"description": "Mentorship relation mentee ID", "type": "integer"}, "mentor_id": {"description": "Mentorship relation mentor ID", "type": "integer"}, "notes": {"description": "Mentorship relation notes", "type": "string"}, "start_date": {"description": "Mentorship relation start date in UNIX timestamp format", "type": "number"}, "state": {"description": "Mentorship relation state", "type": "integer"}}, "required": ["accept_date", "action_user_id", "creation_date", "end_date", "id", "mentee_id", "mentor_id", "notes", "start_date", "state"], "type": "object"}, "Login request data model": {"properties": {"password": {"description": "User's password", "type": "string"}, "username": {"description": "User's username", "type": "string"}}, "required": ["password", "username"], "type": "object"}, "Login response data model": {"properties": {"access_token": {"description": "User's access token", "type": "string"}, "expiry": {"description": "Access token expiry UNIX timestamp", "type": "number"}}, "required": ["access_token", "expiry"], "type": "object"}, "Send mentorship relation request model": {"properties": {"end_date": {"description": "Mentorship relation end date in UNIX timestamp format", "type": "number"}, "mentee_id": {"description": "Mentorship relation mentee ID", "type": "integer"}, "mentor_id": {"description": "Mentorship relation mentor ID", "type": "integer"}, "notes": {"description": "Mentorship relation notes", "type": "string"}}, "required": ["end_date", "mentee_id", "mentor_id", "notes"], "type": "object"}, "Update User request data model": {"properties": {"available_to_mentor": {"description": "User availability to mentor indication", "type": "boolean"}, "bio": {"description": "User bio", "type": "string"}, "interests": {"description": "User interests", "type": "string"}, "location": {"description": "User location", "type": "string"}, "name": {"description": "User name", "type": "string"}, "need_mentoring": {"description": "User need mentoring indication", "type": "boolean"}, "occupation": {"description": "User occupation", "type": "string"}, "photo_url": {"description": "User photo url", "type": "string"}, "resume_url": {"description": "User resume url", "type": "string"}, "skills": {"description": "User skills", "type": "string"}, "slack_username": {"description": "User slack username", "type": "string"}, "social_media_links": {"description": "User social media links", "type": "string"}, "username": {"description": "User username", "type": "string"}}, "type": "object"}, "User Complete model used in listing": {"properties": {"available_to_mentor": {"description": "User availability to mentor indication", "type": "boolean"}, "bio": {"description": "User bio", "type": "string"}, "current_role": {"description": "User current role", "type": "integer"}, "email": {"description": "User email", "type": "string"}, "email_verification_date": {"description": "User email verification date", "format": "date-time", "type": "string"}, "id": {"description": "The unique identifier of a user", "type": "integer"}, "interests": {"description": "User interests", "type": "string"}, "is_admin": {"description": "User admin status", "type": "boolean"}, "is_email_verified": {"description": "User email verification status", "type": "boolean"}, "location": {"description": "User location", "type": "string"}, "membership_status": {"description": "User membershipstatus", "type": "integer"}, "name": {"description": "User name", "type": "string"}, "need_mentoring": {"description": "User need mentoring indication", "type": "boolean"}, "occupation": {"description": "User occupation", "type": "string"}, "password_hash": {"description": "User password hash", "type": "string"}, "photo_url": {"description": "User photo url", "type": "string"}, "registration_date": {"description": "User registration date", "format": "date-time", "type": "string"}, "resume_url": {"description": "User resume url", "type": "string"}, "skills": {"description": "User skills", "type": "string"}, "slack_username": {"description": "User slack username", "type": "string"}, "social_media_links": {"description": "User social media links", "type": "string"}, "terms_and_conditions_checked": {"description": "User Terms and Conditions check state", "type": "boolean"}, "username": {"description": "User username", "type": "string"}}, "required": ["email", "is_admin", "is_email_verified", "name", "password_hash", "registration_date", "terms_and_conditions_checked", "username"], "type": "object"}, "User list model": {"properties": {"email": {"description": "User email", "type": "string"}, "id": {"description": "The unique identifier of a user", "type": "integer"}, "name": {"description": "User name", "type": "string"}, "username": {"description": "User username", "type": "string"}}, "required": ["email", "name", "username"], "type": "object"}, "User registration model": {"properties": {"email": {"description": "User email", "type": "string"}, "name": {"description": "User name", "type": "string"}, "password": {"description": "User password", "type": "string"}, "terms_and_conditions_checked": {"description": "User check Terms and Conditions value", "type": "boolean"}, "username": {"description": "User username", "type": "string"}}, "required": ["email", "name", "password", "terms_and_conditions_checked", "username"], "type": "object"}}, "host": "localhost:5000/", "info": {"description": "API documentation for the backend of Mentorship System", "title": "Mentorship System API", "version": "1.0"}, "paths": {"/admin/new": {"post": {"operationId": "post_assign_new_user_admin", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/Assign User model"}}], "responses": {"200": {"description": "Success"}}, "summary": "Assigns a User as a new Admin", "tags": ["Admins"]}}, "/login": {"post": {"description": "The user can login with (username or email) + password.\nUsername field can be either the User's username or the email.\nThe return value is an access token and the expiry timestamp.\nThe token is valid for 1 week.", "operationId": "login", "parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/Login request data model"}}], "responses": {"200": {"description": "Successful login", "schema": {"$ref": "#/definitions/Login response data model"}}}, "summary": "Login user", "tags": ["Users"]}}, "/mentorship-relation/send_request": {"post": {"operationId": "send_request", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/Send mentorship relation request model"}}], "responses": {"200": {"description": "Mentorship Relation request was sent successfully."}, "400": {"description": "Validation error."}}, "summary": "Creates a new mentorship relation request", "tags": ["Mentorship Relation"]}}, "/mentorship-relations": {"get": {"operationId": "get_all_user_mentorship_relations", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}, {"description": "An optional fields mask", "format": "mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"200": {"description": "Return all user's mentorship relations was successfully.", "schema": {"$ref": "#/definitions/List mentorship relation request model"}}}, "summary": "Lists all mentorship relations", "tags": ["Mentorship Relation"]}}, "/register": {"post": {"operationId": "create_user", "parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/User registration model"}}], "responses": {"201": {"description": "User successfully created."}}, "summary": "Creates a new user", "tags": ["Users"]}}, "/user": {"delete": {"operationId": "delete_user", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}], "responses": {"204": {"description": "User successfully deleted."}, "404": {"description": "User not found."}}, "summary": "Deletes user", "tags": ["Users"]}, "get": {"operationId": "get_user", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}, {"description": "An optional fields mask", "format": "mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/User list model"}}, "404": {"description": "User not found."}}, "summary": "Returns a user", "tags": ["Users"]}, "put": {"operationId": "update_user_profile", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/Update User request data model"}}], "responses": {"204": {"description": "User successfully updated."}, "404": {"description": "User not found."}}, "summary": "Updates user profile", "tags": ["Users"]}}, "/user/change_password": {"put": {"operationId": "update_user_password", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/Change password request data model"}}], "responses": {"200": {"description": "Success"}}, "summary": "Updates the user's password", "tags": ["Users"]}}, "/users": {"get": {"operationId": "list_users", "parameters": [{"description": "An optional fields mask", "format": "mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/User Complete model used in listing"}, "type": "array"}}}, "summary": "Returns list of all the users", "tags": ["Users"]}}, "/users/verified": {"get": {"operationId": "get_verified_users", "parameters": [{"description": "An optional fields mask", "format": "mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/User list model"}}}, "summary": "Returns all verified users", "tags": ["Users"]}}, "/users/{user_id}": {"get": {"operationId": "get_user", "parameters": [{"description": "Authentication access token. E.g.: JWT <access_token>", "in": "header", "name": "Authorization", "required": true, "type": "string"}], "responses": {"201": {"description": "Success.", "schema": {"$ref": "#/definitions/User list model"}}, "400": {"description": "User id is not valid."}, "404": {"description": "User does not exist."}}, "summary": "Returns a user", "tags": ["Users"]}, "parameters": [{"description": "The user identifier", "in": "path", "name": "user_id", "required": true, "type": "integer"}]}}, "produces": ["application/json"], "responses": {"MaskError": {"description": "When any error occurs on mask"}, "ParseError": {"description": "When a mask can't be parsed"}}, "swagger": "2.0", "tags": [{"description": "Default namespace", "name": "default"}, {"description": "Operations related to users", "name": "Users"}, {"description": "Operations related to Admin users", "name": "Admins"}, {"description": "Operations related to mentorship relations between users", "name": "Mentorship Relation"}]}